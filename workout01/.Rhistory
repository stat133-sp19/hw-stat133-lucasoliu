60 + 9
nice <- 69
nice
nice = 69
nice
nice = 0
nice
nice<- 69
nice
transportation
total
abs(-10)
hello = 100
c(nice, hello)
ok <- c(nice, hello)
barplot(ok)
sort(barplot(ok))
sort(ok)
barplot(ok)
sort(ok)
sort(-ok)
barplot(ok)
ok
barplot(-ok)
barplot(ok)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
?Arithmetic
?? binomial
help.search(binomial)
help.search("binomial")
install.packages("stringr")
install.packages("RColorBrewer")
install.packages("XML")
x = 2
3x^2
3*x^2
3*x^2 + 4*x + 8
knitr::opts_chunk$set(echo = TRUE)
phone <- 80
transportation <- 20
groceries <- 527
gym <- 10
rent <- 1500
other <- 83
total <- phone + transportation + groceries + gym + rent + other
semester <- 5 * total
year = 10 * total
expenses <- c(phone, transportation, groceries, gym, rent, other)
barplot(expenses)
a = 3
b = 4
hypotenuse <- sqrt(a^2 + b^2)
n <- 5
k <- 2
p <- 0.5
probability = choose(n, k) * p^k * (1-p)^(n-k)
knitr::opts_chunk$set(echo = TRUE)
phone <- 80
transportation <- 20
groceries <- 527
gym <- 10
rent <- 1500
other <- 83
total <- phone + transportation + groceries + gym + rent + other
semester <- 5 * total
year = 10 * total
expenses <- c(phone, transportation, groceries, gym, rent, other)
barplot(expenses)
a = 3
b = 4
hypotenuse <- sqrt(a^2 + b^2)
n <- 5
k <- 2
p <- 0.5
probability = choose(n, k) * p^k * (1-p)^(n-k)
```{r expenses, echo = TRUE}
```{r expenses}
knitr::opts_chunk$set(echo = TRUE)
phone <- 80
transportation <- 20
groceries <- 527
gym <- 10
rent <- 1500
other <- 83
total <- phone + transportation + groceries + gym + rent + other
semester <- 5 * total
year = 10 * total
expenses <- c(phone, transportation, groceries, gym, rent, other)
barplot(expenses)
a = 3
b = 4
hypotenuse <- sqrt(a^2 + b^2)
n <- 5
k <- 2
p <- 0.5
probability = choose(n, k) * p^k * (1-p)^(n-k)
rm(list=ls())
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
number <- c(30, 35, 23, 9, 11, 27, 34, 6, 3, 0)
player <- c('Stephen Curry', 'Kevin Durant', 'Draymond Green', 'Andre Iguodala', 'Klay Thompson', 'Zaza Pachulia', 'Shaun Livingston', 'Nick Young', 'David West', 'Patrick McCaw')
position <- c('PG', 'PF', 'PF', 'SF', 'SG', 'C', 'PG', 'SG', 'C', 'SG')
position <- factor(position)
height <- c('6-3', '6-9', '6-7', '6-6', '6-7', '6-11', '6-7', '6-7', '6-9', '6-7')
weight <- c(190, 240, 230, 215, 215, 270, 192, 210, 250, 185)
birthdate <- c('March 14, 1988', 'September 29, 1988', 'March 4, 1990', 'January 28, 1984', 'February 8, 1990', 'February 10, 1984', 'September 11, 1985', 'June 1, 1985', 'August 29, 1980', 'October 25, 1995')
experience <- c(8, 10, 5, 13, 6, 14, 12, 10, 14, 1)
college <- c('Davidson College', 'University of Texas at Austin', 'Michigan State University', 'University of Arizona', 'Washington State University', NA, NA, 'University of Southern California', 'Xavier University', 'University of Nevada, Las Vegas')
player[6]
college[height=='6-6']
experience[6]
player[10]
player[weight==max(weight)]
count(position)
count
player[weight==max(weight)]
college[height=='6-6']
position[experience==max(experience)]
number[weight=min(weight)]
number[10]
number[weight==min(weight)]
count(position, 'CF')
seq
rep
table(position)
table(position)[1]
table(position)[CF]
table(position)['CF']
mean(weight)
count
freq
weight[weight>mean(weight)]
len
length
length(weight[weight>mean(weight)])
length(player[9<=experience<=12])
length(player[9<=experience && experience <= 12])
length(player[9<=experience])
experience[experience<=9]
length(player[9>=experience && experience <= 12])
length(player[experience>=9 && experience<=12])
length(player[experience >= 9 && experience<=12])
length(player[experience >= 9 && experience <= 12])
length(player[experience >= 9 & experience <= 12])
mean(experience[position=='SG'])
median(weight[position != 'C'])
gsw <- list(
player = player,
number = number,
position = position,
weight = weight,
experience = experience
)
gsw$number[gsw$weight == max(gsw$weight)]
gsw$position[gsw$experience == min(gsw$weight)]
gsw$position[gsw$experience == min(gsw$experience)]
gsw$position[which.max(weight)]
gsw$number[which.max(weight)]
gsw$number[which.max(gsw$weight)]
gsw$position[which.min(gsw$experience)]
gsw$position[which.min(gsw$experience)]
table(gsw$player[gsw$experience < 8 | gsw$experience > 11])
length(gsw$player[gsw$experience < 8 | gsw$experience > 11])
gsw$player[which.max(abs(gsw$weight - mean(gsw$weight))]
gsw$player[which.max(abs(gsw$weight - mean(gsw$weight)))]
position <- c('PG', 'PF', 'PF', 'SF', 'SG', 'C', 'PG', 'SG', 'C', 'SG')
number <- c(30, 35, 23, 9, 11, 27, 34, 6, 3, 0)
player <- c('Stephen Curry', 'Kevin Durant', 'Draymond Green', 'Andre Iguodala', 'Klay Thompson', 'Zaza Pachulia', 'Shaun Livingston', 'Nick Young', 'David West', 'Patrick McCaw')
position <- c('PG', 'PF', 'PF', 'SF', 'SG', 'C', 'PG', 'SG', 'C', 'SG')
position <- factor(position)
height <- c('6-3', '6-9', '6-7', '6-6', '6-7', '6-11', '6-7', '6-7', '6-9', '6-7')
weight <- c(190, 240, 230, 215, 215, 270, 192, 210, 250, 185)
birthdate <- c('March 14, 1988', 'September 29, 1988', 'March 4, 1990', 'January 28, 1984', 'February 8, 1990', 'February 10, 1984', 'September 11, 1985', 'June 1, 1985', 'August 29, 1980', 'October 25, 1995')
experience <- c(8, 10, 5, 13, 6, 14, 12, 10, 14, 1)
college <- c('Davidson College', 'University of Texas at Austin', 'Michigan State University', 'University of Arizona', 'Washington State University', NA, NA, 'University of Southern California', 'Xavier University', 'University of Nevada, Las Vegas')
player[weight==max(weight)]
college[height=='6-6']
position[experience==max(experience)]
number[weight==min(weight)]
table(position)
length(weight[weight>mean(weight)])
length(player[experience >= 9 & experience <= 12])
mean(experience[position=='SG'])
median(weight[position != 'C'])
gsw <- list(
player = player,
number = number,
position = position,
weight = weight,
experience = experience
)
gsw$number[which.max(gsw$weight)]
gsw$position[which.min(gsw$experience)]
length(gsw$player[gsw$experience < 8 | gsw$experience > 11])
gsw$player[which.max(abs(gsw$weight - mean(gsw$weight)))]
hp <- list(
first = 'Harry',
last = 'Potter',
courses = c('Potions', 'Enchantments', 'Spells'),
sport = 'quidditch',
age = 18L,
gpa = 3.9
)
class(hp)
length(hp)
length(hp$courses)
type(hp$age)
typeof(hp$age)
typeof(hp$gpa)
typeof(c(hp$age, hp$gpa))
1 + TRUE
1 + FALSE
-2 > 0
"-2" > 0
"-2"
1 + !TRUE
!TRUE + 1
lord <- c('v', 'o', 'l', 'd', 'e', 'm', 'o', 'r', 't')
lord[TRUE]
lord[length(lord)]
lord[seq(from = length(lord), to = 1, by = -2)]
lord[lord == "o"]
lord[lord != "e" & lord != "o"]
lord[lord %in% c('a', 'e', 'i', 'o', 'u')]
toupper(lord[!(lord %in% c('a', 'e', 'i', 'o', 'u'))])
paste(lord, collapse = '')
lord[is.na(lord)]
is.na
is.na(lodr)
is.na(lord)
is.na(lord)
character(0)
character
sum(!is.na(lord))
lrod
lord
m <- matrix(lord, nrow = 3, ncol = 3)
m
m[1]
m[1:]
m[1][]
m[1][:]
m[1,]
m[2:, 2:]
m[2, 2]
m[1-3]
m[2-3]
m[2-3][2-3]
m
m[1-2]
m[-1]
m[1,]
m
m[1,2]
m[1,][,1]
m[,1]
m[,1] + m[1,]
v
m
m%1
m$1
m$[1]
m$[1,]
m$[,1]
m
apply(m, 2, rev)
m[1,]
m[1]
m[,3]
m[,3] = m[,2]
m
m
m <- matrix(lord, nrow = 3, ncol = 3)
m
m
rev(m)
apply(m, rev)
apply(m, 0, rev)
apply(m, 1, rev)
apply(m, 2, rev)
m
apply(m, 3, rev)
apply(m, -1, rev)
m
apply(m + 1, -1, rev)
number <- c(30, 35, 23, 9, 11, 27, 34, 6, 3, 0)
player <- c('Stephen Curry', 'Kevin Durant', 'Draymond Green', 'Andre Iguodala', 'Klay Thompson', 'Zaza Pachulia', 'Shaun Livingston', 'Nick Young', 'David West', 'Patrick McCaw')
position <- c('PG', 'PF', 'PF', 'SF', 'SG', 'C', 'PG', 'SG', 'C', 'SG')
position <- factor(position)
height <- c('6-3', '6-9', '6-7', '6-6', '6-7', '6-11', '6-7', '6-7', '6-9', '6-7')
weight <- c(190, 240, 230, 215, 215, 270, 192, 210, 250, 185)
birthdate <- c('March 14, 1988', 'September 29, 1988', 'March 4, 1990', 'January 28, 1984', 'February 8, 1990', 'February 10, 1984', 'September 11, 1985', 'June 1, 1985', 'August 29, 1980', 'October 25, 1995')
experience <- c(8, 10, 5, 13, 6, 14, 12, 10, 14, 1)
college <- c('Davidson College', 'University of Texas at Austin', 'Michigan State University', 'University of Arizona', 'Washington State University', NA, NA, 'University of Southern California', 'Xavier University', 'University of Nevada, Las Vegas')
player[weight==max(weight)]
college[height=='6-6']
position[experience==max(experience)]
number[weight==min(weight)]
table(position)
length(weight[weight>mean(weight)])
length(player[experience >= 9 & experience <= 12])
mean(experience[position=='SG'])
median(weight[position != 'C'])
gsw <- list(
player = player,
number = number,
position = position,
weight = weight,
experience = experience
)
gsw$number[which.max(gsw$weight)]
gsw$position[which.min(gsw$experience)]
length(gsw$player[gsw$experience < 8 | gsw$experience > 11])
gsw$player[which.max(abs(gsw$weight - mean(gsw$weight)))]
hp <- list(
first = 'Harry',
last = 'Potter',
courses = c('Potions', 'Enchantments', 'Spells'),
sport = 'quidditch',
age = 18L,
gpa = 3.9
)
class(hp)
length(hp)
length(hp$courses)
typeof(hp$age)
typeof(hp$gpa)
typeof(c(hp$age, hp$gpa))
m <- matrix(lord, nrow = 3, ncol = 3)
m[1,]
apply(m, 2, rev)
m[,3] = m[,2]
m
m <- matrix(lord, nrow = 3, ncol = 3)
rm(list=ls())
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
load('nba2018-salary-points.RData')
ls()
four[1]
load('nba2018-salary-points.RData')
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
load('nba2018-salary-points.RData')
four <- head(player, n = 4)
four
four[1]
four[2]
four[0]
four[-1]
four[-c(1,2,3)]
four
four[5]
four[10]
four[c(1,2,2,3,3,3)]
four[1:5]
length(foru)
length(four)
seq
seq(four)
ep(four)
rep(four)
four[seq(from = 2, to length(lord), by 2)]
four[seq(from = 2, to length(lord), by = 2)]
four[seq(four)]
four[seq(from = 2, to length(four), by 2)]
four[seq(from = 2, to = length(four), by 2)]
four[seq(from = 2, to = length(four), by = 2)]
four
four
player
player[seq(from = 2, to = length(four), by = 2)]
player[seq(from = 2, to = length(player), by = 2)]
scored
seq
rep(four)
scored[seq(from = 10, to = length(scored), by = 10)]
rep(from = 10, to = length(scored), by = 10)
length(team)
team[seq(from = length(team), to = 2, by = -2)]
team[seq(from = length(team), to = 2, by = -2, if )]
length(team) + 1
team
rev
rev(team)
team[seq(from = length(team), to = 2, by = -2)]
rev(team[seq(from = 2, to = length(team), by = 2)])
player[position == 'C']
team
players[position == 'C' & team == 'GSW']
player[position == 'C' & team == 'GSW']
player[team == 'GSW' | team == 'LAL']
position
player[position == 'SG' | position == 'PG' & team == 'LAL']
player[(position == 'SG' | position == 'PG') & team == 'LAL']
position
position[position == 'SF' & (team == 'GSW' | team == 'LAL')]
player[which.max(salary)]
which.max(salary)
player[which.max(scored)]
max(salary[position == 'C'])
team[player[which.max(scored)]]
player[which.max(scored)]
team["Russell Westbrook"]
team
team["Russell Westbrook"]
team["Russell Westbrook"]
player[which.max(scored)]
team[which.max(player)]
team[which.max(player[which.max(scored)])]
team[player[which.max(scored)]]
player[which.max(points3)]
plot(scored, salary)
install.packages(c("ggplot2", "plotly"))
library(plotly)\
library(plotly)
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
getwd()
load('nba2018-salary-points.RData')
plot_ly(x = scored, y = salary, type = "scatter", mode = "markers")
library(plotly)
install.packages(c("ggplot2", "plotly"))
load('nba2018-salary-points.RData')
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = 'nba2018-salary-points.RData')
load('nba2018-salary-points.RData')
head(mtcars)
getwd()
pwd
summary(mtcars[ ,c('mpg', 'disp')])
x <- select(mtcars, mpg)
x
library(dplyr)
library(ggplot2)
select(mtcars, mpg)
sink(file = 'stat133-lab05/exports/dataset.csv')
select(mtcars, mpg, disp, hp)
sink()
getwd()
sink(file='hello.csv')
select(mtcars, mpg, disp, hp)
sink()
help
help(png)
help(png())
sink(file = 'dataset.csv')
select(mtcars, mpg, disp, hp)
sink()
mtcars
x <- 3
x * 2
var
var <- 3
var * 2
1 == TRUE
2 == TRUE
3 == TRUE
-1 == TRUE
0 == TRUE
2 == FALSE
0 == FALSE
1 == FALSE
1 == TRUE
2 == FALSE
2 == TRUE
rep(1:3)
rep(1:3, 2)
rep(1:3, 3)
y <- matrix(1:12, byrow = TRUE, nrow = 4, ncol = 3)
y <- matrix(1:12, byrow = TRUE, nrow = 4, ncol = 3)
yy
y
y <- matrix(1:12, bycol = TRUE, nrow = 4, ncol = 3)
seq(from=1, to=5, by=1)
seq(from=1, to=5, by=2)
x <- seq(1:5)
x
head(x, 2)
tail(x, 2)
str(x)
summary(x)
x(1:5)
x[1]
setwd("C:/Users/Lucas Liu/stat133/hw-stat133/workout01")
library(dplyr)
